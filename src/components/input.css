input {
  &::placeholder {
    color: theme(colors.n-gray.400);
  }
}

.input-field {
  --ring-width: 0px;
  --border-color: rgba(theme(colors.n-gray.700), 0.1);
  --border-shadow-color: rgba(0, 0, 0, 0.08);
  --padding-inline: 1.5ch;
  --padding-block: 0.75ch;
  display: block;
  background-color: theme(colors.white);
  border-radius: theme(borderRadius.DEFAULT);
  padding-inline: var(--padding-inline);
  padding-block: var(--padding-block);
  appearance: none;
  background-clip: padding-box;
  line-height: theme(lineHeight.normal);
  width: 100%;
  font-size: theme(fontSize.base);
  box-shadow: var(--border-color) 0 0 0 1px, var(--border-shadow-color) 0 1px 0 0,
    rgba(0, 0, 0, 0.04) 0 2px 2px 0, rgba(0, 0, 0, 0.02) 0 3px 3px 0,
    rgba(0, 0, 0, 0.01) 0 4px 4px 0, rgba(theme(colors.n-blue.300), 0.2) 0 0 0 var(--ring-width);
  transition: box-shadow 0.3s ease;
  outline: transparent;

  &::placeholder {
    color: theme(colors.n-gray.400);
  }

  &:where(:disabled) {
    cursor: not-allowed;
    background-color: theme(colors.n-gray.50);
  }

  &:where(:read-only) {
    cursor: not-allowed;
  }

  &:where(:focus-within, :focus, :focus-visible) {
    --ring-width: 4px;
    --border-color: rgba(theme(colors.n-blue.500), 0.7);
    --border-shadow-color: rgba(theme(colors.n-blue.500), 0.7);
  }

  &:where(select) {
    --select-bg-img: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' stroke-width='2' stroke='%23667085' fill='none' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath stroke='none' d='M0 0h24v24H0z' fill='none'%3E%3C/path%3E%3Cpath d='M6 9l6 6l6 -6'%3E%3C/path%3E%3C/svg%3E");
    padding-inline-end: 3.75ch;
    background-image: var(--select-bg-img);
    background-repeat: no-repeat;
    background-position: left 1.25ch center;
    background-size: 1.5ch;
  }

  &-rounded {
    border-radius: theme(borderRadius.full);
  }

  &-xs {
    font-size: theme(fontSize.xs);
  }
  &-sm {
    font-size: theme(fontSize.sm);
  }
  &-md {
    font-size: theme(fontSize.base);
  }
  &-lg {
    font-size: theme(fontSize.lg);
  }
  &-xl {
    font-size: theme(fontSize.xl);
  }

  &-plaintext {
    padding-inline: 0;
    border-color: transparent;
    box-shadow: none;

    &:where(:focus-visible, :focus) {
      border-color: transparent;
      box-shadow: none;
    }
  }
}

.input-addon {
  --ring-width: 0px;
  --border-color: rgba(theme(colors.n-gray.700), 0.1);
  --border-shadow-color: rgba(0, 0, 0, 0.08);
  --padding-inline: 1.5ch;
  --padding-block: 0.75ch;
  display: flex;
  align-items: center;
  white-space: nowrap;
  text-align: center;
  border-radius: theme(borderRadius.DEFAULT);
  padding-inline: var(--padding-inline);
  padding-block: var(--padding-block);
  background-color: theme(colors.n-gray.50);
  line-height: theme(lineHeight.normal);
  font-size: theme(fontSize.base);
  box-shadow: var(--border-color) 0 0 0 1px, var(--border-shadow-color) 0 1px 0 0,
    rgba(0, 0, 0, 0.04) 0 2px 2px 0, rgba(0, 0, 0, 0.02) 0 3px 3px 0,
    rgba(0, 0, 0, 0.01) 0 4px 4px 0, rgba(theme(colors.n-blue.300), 0.2) 0 0 0 var(--ring-width);
}

.input-element {
  display: flex;
  position: absolute;
  top: 0;
  right: 0;
  align-items: center;
  justify-content: center;
  pointer-events: none;
  height: 100%;
  aspect-ratio: 1 / 1;
  padding: 0.75ch;
  font-size: theme(fontSize.base);
  z-index: 2;

  &:has(button, a) {
    pointer-events: auto;
  }
}

.input-inset {
  display: flex;
  position: relative;
  background-clip: padding-box;
  width: 100%;
  border-radius: theme(borderRadius.DEFAULT);

  &:has(.input-element) {
    & .input-field {
      & + .input-element {
        right: auto;
        left: 0;
      }
    }
  }
  &:has(.input-element ~ .input-field) {
    & .input-field {
      padding-inline-start: 4ch;
    }
  }
  &:has(.input-field + .input-element) {
    & .input-field {
      padding-inline-end: 4ch;
    }
  }

  &-rounded {
    & .input-field {
      border-radius: theme(borderRadius.full);
    }
    &:has(.input-element) {
      & .input-element {
        &:first-child {
          right: 1ch;
        }
        &:last-child {
          left: 1ch;
        }
      }
    }
    &:has(.input-element ~ .input-field) {
      & .input-field {
        padding-inline-start: 5ch;
      }
    }
    &:has(.input-field + .input-element) {
      & .input-field {
        padding-inline-end: 5ch;
      }
    }
  }
}

.input-group {
  display: flex;
  position: relative;
  flex-wrap: wrap;
  align-items: stretch;
  width: 100%;
  border-radius: theme(borderRadius.DEFAULT);
  background-clip: padding-box;
  @apply space-x-px;

  > * {
    @apply rounded-none last:rounded-l first:rounded-r;

    &:last-child:has(.input-field) {
      & .input-field {
        @apply rounded-l;
      }
    }
    &:first-child:has(.input-field) {
      & .input-field {
        @apply rounded-r;
      }
    }
  }

  &-xs {
    & .input-field,
    & .input-element,
    & .input-addon {
      font-size: theme(fontSize.xs);
    }
  }
  &-sm {
    & .input-field,
    & .input-element,
    & .input-addon {
      font-size: theme(fontSize.sm);
    }
  }
  &-md {
    & .input-field,
    & .input-element,
    & .input-addon {
      font-size: theme(fontSize.base);
    }
  }
  &-lg {
    & .input-field,
    & .input-element,
    & .input-addon {
      font-size: theme(fontSize.lg);
    }
  }
  &-xl {
    & .input-field,
    & .input-element,
    & .input-addon {
      font-size: theme(fontSize.xl);
    }
  }

  & .input-inset {
    flex: 1 1 auto;
    width: 1%;
    min-width: 0;

    & .input-field {
      border-radius: 0;
    }
  }

  & .input-field {
    flex: 1 1 auto;
    width: 1%;
    min-width: 0;

    &:where(:focus-within, :focus, :focus-visible) {
      --ring-width: 4px;
      --border-color: rgba(theme(colors.n-blue.500), 0.7);
      --border-shadow-color: rgba(theme(colors.n-blue.500), 0.7);
      z-index: 1;
    }
  }

  &-rounded {
    border-radius: theme(borderRadius.full);

    > * {
      @apply rounded-none last:rounded-l-full first:rounded-r-full;

      &:last-child:has(.input-field) {
        & .input-field {
          @apply rounded-l-full;
        }
      }
      &:first-child:has(.input-field) {
        & .input-field {
          @apply rounded-r-full;
        }
      }
    }

    &:has(.input-inset) {
      & .input-inset {
        &:first-child {
          &:has(.input-element) {
            & .input-element {
              &:first-child {
                right: 1ch;
              }
            }
          }
          &:has(.input-element ~ .input-field) {
            & .input-field {
              padding-inline-start: 5ch;
            }
          }
          &:has(.input-field + .input-element) {
            & .input-field {
              padding-inline-end: 5ch;
            }
          }
        }
        &:last-child {
          &:has(.input-element) {
            & .input-element {
              &:last-child {
                left: 1ch;
              }
            }
          }
          &:has(.input-field + .input-element) {
            & .input-field {
              padding-inline-end: 5ch;
            }
          }
        }
      }
    }
  }

  &:where([dir='ltr']) {
    > * {
      border-radius: 0 !important;
      @apply last:!rounded-r first:!rounded-l;

      &:last-child:has(.input-field) {
        & .input-field {
          @apply rounded-r;
        }
      }
      &:first-child:has(.input-field) {
        & .input-field {
          @apply rounded-l;
        }
      }
    }
  }

  &-rounded {
    &:where([dir='ltr']) {
      > * {
        border-radius: 0 !important;
        @apply last:!rounded-r-full first:!rounded-l-full;

        &:last-child:has(.input-field) {
          & .input-field {
            @apply rounded-r-full;
          }
        }
        &:first-child:has(.input-field) {
          & .input-field {
            @apply rounded-l-full;
          }
        }
      }
    }
  }
}
